<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.springbook.view"></context:component-scan>
	
	<!-- 아래를 선언해야 @ExceptionHandler 어노테이션을 인식할 수 있다 -->
	<!-- HttpMessageConverter를 구현한 모든 변환기가 생성된다(json, xml 변환) -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	
	<!-- 파일 업로드 설정 -->
	<!-- maxUploadSize는 파일 업로드 크기 제한, 설정은 제거하거나 -1이면 무제한 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000"/>
	</bean>
	
	<!-- 예외 처리 설정 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">
					common/arithmeticError.jsp
				</prop>
				<prop key="java.lang.NullPointerException">
					common/nullPointerError.jsp
				</prop>
				<prop key="java.lang.IllegalArgumentException">
					common/illegalArgumentError.jsp
				</prop>
				<prop key="java.lang.Exception">
					common/error.jsp
				</prop>
			</props>
		</property>
	</bean>
	
	<!-- 다국어 설정 -->
	<!-- MessageSource 등록 : 프로퍼티 파일들을 읽어들이는 역할 -->
	<bean id="messageSource" 
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.messageSource</value>
			</list>
		</property>
	</bean>
	
	<!-- LocaleResolver 등록 : HTTP 헤더의 locale정보를 토대로 프로퍼티 파일을 선택 
	     					 반드시 id를 localeResolver로 해야 한다-->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

	<!-- LocaleChangeInterceptor 등록 : HTTP 헤더를 적용하지 않고 우리가 언어를 선택하겠다 
	      lang이라는 변수가 전달되면 이 변수값에 따라 사용 프로퍼티 파일을 정하겠다-->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
	</mvc:interceptors>
</beans>














